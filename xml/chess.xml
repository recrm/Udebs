<udebs>

<definitions>
    <lists>
        <colour />
        <status />
        <movelist />
    </lists>
    <stats>
        <ACT />
        <SPD />
        <FLP />
    </stats>
    <strings>
        <sprite />
    </strings>
</definitions>

<map>
    <dim>
        <x>8</x>
        <y>8</y>
    </dim>
</map>

<entities>
    
    <!-- fill -->
    
    <fill_pawn>
        <require>
            <item>DISTANCE 'y' == 0</item>
        </require>
    </fill_pawn>
    
    <nonempty>
        <require>
            <item>target.name != 'empty'</item>
        </require>
    </nonempty>
    
    <!-- scripts -->
    
    <init>
        <effect>
            <item>'black' CAST 'empty' 'brecruit'</item>
            <item>'white' CAST 'empty' 'wrecruit'</item>
        </effect>
    </init>

    <brecruit>
        <effect>
            <item>RECRUIT 'pawn' (FILL (0,1) 'fill_pawn')</item>
            <item>RECRUIT 'rook' (0,0)</item>
            <item>RECRUIT 'rook' (7,0)</item>
            <item>RECRUIT 'knight' (1,0)</item>
            <item>RECRUIT 'knight' (6,0)</item>
            <item>RECRUIT 'bishop' (2,0)</item>
            <item>RECRUIT 'bishop' (5,0)</item>
            <item>RECRUIT 'king' (3,0)</item>
            <item>RECRUIT 'queen' (4,0)</item>
            <item>GETS (FILL (0,1) 'nonempty') 'group' 'black'</item>
        </effect>
    </brecruit>
    
    <wrecruit>
        <effect>
            <item>RECRUIT 'pawn' (FILL (0,6) 'fill_pawn')</item>
            <item>RECRUIT 'rook' (0,7)</item>
            <item>RECRUIT 'rook' (7,7)</item>
            <item>RECRUIT 'knight' (1,7)</item>
            <item>RECRUIT 'knight' (6,7)</item>
            <item>RECRUIT 'bishop' (2,7)</item>
            <item>RECRUIT 'bishop' (5,7)</item>
            <item>RECRUIT 'king' (3,7)</item>
            <item>RECRUIT 'queen' (4,7)</item>
            <item>GETS (FILL (0,6) 'nonempty') 'group' 'white'</item>
        </effect>
    </wrecruit>
    
    <!-- commented out items force players to take turns. -->
    <tick>
       <!-- 
       <require>
            <item>'tick' in STAT group target</item>
        </require>
        <effect>
            <item>CHANGE ACT (STAT SPD target) target</item>
        </effect> -->
    </tick>
    
    <!-- statuses effects -->
    
    <status_group>
        <require>
            <item>move.name not in STAT target 'status'</item>
        </require>
        <effect>
            <item>GETS target 'status' move.name</item>
        </effect>
    </status_group>
    
    <moved_once>
        <group>
            <item>status_group</item>
        </group>
    </moved_once>
    
    <passant_danger>
        <effect>
            <item>DELAY (CAST target 'passant_remove') 2</item>
        </effect>
        <group>
            <item>status_group</item>
        </group>
    </passant_danger>
    
    <promoted>
        <group>
            <item>status_group</item>
        </group>
    </promoted>
    
    <captured>
        <require>
            <item>target.name != 'empty'</item>
        </require>
        <group>
            <item>status_group</item>
        </group>
    </captured>
    
    <!-- chain casts -->
    
    <promote>
        <require>
            <item>caster.loc[1] in [0,7]</item>
        </require>
        <effect>
            <item>new = RECRUIT 'queen' caster</item>
            <item>GETS var.new 'group' (CLASS caster 'tick')</item>
            <item>GETS caster 'status' 'promoted'</item>
        </effect>
    </promote>
    
    <passant_remove>
        <effect>
            <item>LOSES target status passant_danger</item>
        </effect>
    </passant_remove>
    
    <!-- moves groups -->

    <time>
        <!--<require>
            <item>STAT C ACT &gt;= 2</item>
        </require>
        <effect>
            <item>CHANGE (CLASS C tick) ACT -(STAT C ACT)</item>
        </effect>-->
    </time>
        
    <player_move>
        <require>
            <item>CLASS caster 'tick' not in STAT target 'group'</item>
        </require>
        <effect>
            <item>CAST caster 'moved_once'</item>
            <item>CAST target 'captured'</item>
        </effect>
    </player_move>

    <pawn_move>
        <require>
            <item>(target.loc[1] * STAT C 'FLP') &lt; (caster.loc[1] * STAT C 'FLP')</item>
        </require>
        <effect>
            <item>TRAVEL target</item>
            <item>CAST caster 'promote'</item>
        </effect>
    </pawn_move>
    
    <king_castle>
        <require>
            <item>CLASS caster 'tick' in STAT target 'group'</item>
            <item>'rook' in target.name</item>
            <item>'moved_once' not in STAT caster 'status'</item>
            <item>'moved_once' not in STAT target 'status'</item>
            <item>BLOCK 'x'</item>
        </require>
        <effect>
            <item>CAST caster 'moved_once'</item>
            <item>CAST target 'moved_once'</item>
        </effect>
    </king_castle>
    
    <!-- moves -->

    <pawn_travel>
        <require>
            <item>DISTANCE 'y' == 1</item>
            <item>DISTANCE 'x' == 0</item>
            <item>target.name == 'empty'</item>            
        </require>
        <group>
            <item>player_move</item>
            <item>time</item>
            <item>pawn_move</item>
        </group>
    </pawn_travel>

    <pawn_double>
        <require>
            <item>'moved_once' not in STAT caster 'status'</item>
            <item>DISTANCE 'x' == 0</item>
            <item>DISTANCE 'y' == 2</item>
            <item>target.name == 'empty'</item>
            <item>BLOCK 'y'</item>
        </require>
        <effect>
            <item>CAST caster 'passant_danger'</item>
        </effect>
        <group>
            <item>player_move</item>
            <item>pawn_move</item>
            <item>time</item>
        </group>
    </pawn_double>
    
    <pawn_capture>
        <require>
            <item>DISTANCE 'pinf' == 1</item>
            <item>DISTANCE 'x' == DISTANCE 'y'</item>
            <item>target.name != 'empty'</item>
        </require>
        <group>
            <item>player_move</item>
            <item>pawn_move</item>
            <item>time</item>
        </group>
    </pawn_capture>

    <pawn_passant>
        <require>
            <item>'passant_danger' in STAT target 'status'</item>
            <item>DISTANCE 'x' == 1</item>
            <item>DISTANCE 'y' == 0</item>
        </require>
        <effect>
            <item>TRAVEL (target.loc[0], caster.loc[1] - STAT C 'FLP')</item>
            <item>target TRAVEL bump</item>
        </effect>
        <group>
            <item>player_move</item>
            <item>time</item>
        </group>
    </pawn_passant>
    
    <king_qcastle>
        <require>
            <item>target.loc[0] &gt; caster.loc[0]</item>
        </require>
        <effect>
            <item>TRAVEL (caster.loc[0] +2, caster.loc[1])</item>
            <item>target TRAVEL (target.loc[0] -3, caster.loc[1])</item>
        </effect>
        <group>
            <item>king_castle</item>
            <item>time</item>
        </group>
    </king_qcastle>
    
    <king_kcastle>
        <require>
            <item>target.loc[0] &lt; caster.loc[0]</item>
        </require>
        <effect>
            <item>TRAVEL (caster.loc[0] - 2, caster.loc[1])</item>
            <item>target TRAVEL (target.loc[0] +2, caster.loc[1])</item>
        </effect>
        <group>
            <item>king_castle</item>
            <item>time</item>
        </group>
    </king_kcastle>
    
    <rook_travel>
        <require>
            <item>(DISTANCE 'p1' == DISTANCE 'x') or (DISTANCE 'p1' == DISTANCE 'y')</item>
            <item>BLOCK 'x'</item>
        </require>
        <effect>
            <item>TRAVEL target</item>
        </effect>
        <group>
            <item>player_move</item>
            <item>time</item>
        </group>
    </rook_travel>
    
    <bishop_travel>
        <require>
            <item>DISTANCE 'pinf' == DISTANCE 'x'</item>
            <item>DISTANCE 'pinf' == DISTANCE 'y'</item>
            <item>BLOCK 'diag'</item>
        </require>
        <effect>
            <item>TRAVEL target</item>
        </effect>
        <group>
            <item>player_move</item>
            <item>time</item>
        </group>
    </bishop_travel>
    
    <knight_travel>
        <require>
            <item>DISTANCE 'x' == 2 and DISTANCE 'y' == 1 or DISTANCE 'x' == 1 and DISTANCE 'y' == 2</item>
        </require>
        <effect>
            <item>TRAVEL target</item>
        </effect>
        <group>
            <item>player_move</item>
            <item>time</item>
        </group>
    </knight_travel>
    
    <king_travel>
        <require>
            <item>DISTANCE 'pinf' == 1</item>
        </require>
        <effect>
            <item>TRAVEL target</item>
        </effect>
        <group>
            <item>player_move</item>
            <item>time</item>
        </group>
    </king_travel>
    
    <!-- units -->

    <pawn>
        <movelist>
            <item>pawn_travel</item>
            <item>pawn_double</item>
            <item>pawn_capture</item>
            <item>pawn_passant</item>
        </movelist>
        <sprite>P</sprite>
    </pawn>
    
    <bishop>
        <movelist>
            <item>bishop_travel</item>
        </movelist>
        <sprite>B</sprite>
    </bishop>
    
    <rook>
        <movelist>
            <item>rook_travel</item>
        </movelist>
        <sprite>R</sprite>
    </rook>
    
    <queen>
        <movelist>
            <item>bishop_travel</item>
            <item>rook_travel</item>
        </movelist>
        <sprite>Q</sprite>
    </queen>
    
    <king>
        <movelist>
            <item>king_kcastle</item>
            <item>king_qcastle</item>
            <item>king_travel</item>
        </movelist>
        <sprite>K</sprite>
    </king>
    
    <knight>
        <movelist>
            <item>knight_travel</item>
        </movelist>
        <sprite>N</sprite>
    </knight>

    <!-- Tick -->
    <tick />>
    <black>
        <ACT>1</ACT>
        <SPD>1</SPD>
        <FLP>-1</FLP>
        <colour>
            <item>3</item>
            <item>100</item>
            <item>3</item>
        </colour>
        <group>
            <item>tick</item>
        </group>
    </black>
    
    <white>
        <ACT>2</ACT>
        <SPD>1</SPD>
        <FLP>1</FLP>
        <colour>
            <item>100</item>
            <item>3</item>
            <item>100</item>
        </colour>
        <group>
            <item>tick</item>
        </group>
    </white>
</entities>

</udebs>
